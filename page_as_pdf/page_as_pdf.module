<?php

/**
 * Implements hook_menu().
 */
function page_as_pdf_menu() {
  $items['page-as-pdf'] = array(
    'title' => 'Page as PDF',
    'page callback' => 'page_as_pdf_entry',
    'access arguments' => array('edit any pursuit entities'),
  );
  return $items;
}

/**
 * Processes the page for PDF output
 */
function page_as_pdf_entry() {
  $args = func_get_args();
  $query = $_GET;
  $path = implode('/', $args);

  $path = drupal_get_normal_path($path);

  menu_set_active_item($path);
  // Adapted from index.php.
  $node = new stdClass();
  $node->content = menu_execute_active_handler($path, FALSE);

  if (is_array($node->content)) {
    $node->content = drupal_render($node->content);
  }

  if (is_int($node->content)) {
    switch ($node->content) {
      case MENU_NOT_FOUND:
        drupal_not_found();
        return FALSE;
        break;
      case MENU_ACCESS_DENIED:
        drupal_access_denied();
        return FALSE;
        break;
    }
  }

  $node->title = drupal_get_title();
  $node->active_event = event_load(event_switch_get_active_event())->title;
  $node->path = $path;
  $node->changed = REQUEST_TIME;

  // Get rid of the stupid spaces between table tags
  $node->content = preg_replace('!<td[^>]*>(\s*)!', '<td>', $node->content);
  $node->content = preg_replace('!(<th[^>]*>)(\s*)!', '$1', $node->content);

  // Delete any views filter
  $node->content = preg_replace('!(\s*<div class="view-filters">.*?)<div class="view-content">!sim', '<div class="view-content">', $node->content);

  $node->content = preg_replace('!<div class="feed-icon">.*</div>!sim', '', $node->content);
  // Delete any links 
  $node->content = preg_replace('!<a href=[^<]*</a>!sim', '', $node->content);

  // Delete the contextual links also
  //$node->content = preg_replace('!\s*<div class="contextual-links-wrapper">.*?</div>!sim', '', $node->content);
  $pdf = new NORMALPDF('L','mm', 'LETTER');
  $pdf->SetAutoPageBreak(true, 25);
  $pdf->setFontSubsetting(false);
  // set header and footer fonts
  //$pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
  //$pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));
  
  // set default monospaced font
  $pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);
  
  // set margins
  $pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
  $pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
  $pdf->SetFooterMargin(PDF_MARGIN_FOOTER);


  $pdf->AddPage();
  $output = '<style>td {border-bottom-width: 1px;font-size: 10pt;} th {border-bottom-width: 1px;font-size: 10pt;font-weight: bold;}</style>';
  $output .= $node->content;

  $pdf->writeHTML($output, true, 0, true, 0);
  $pdf->lastPage();  
  $out = $pdf->Output('tempo.pdf', 'I');
  header('Content-Type: application/pdf');
  header('Content-Disposition: attachment;filename="Registered-students-'.$node->title.'-'.$node->active_event.'.pdf"');
  echo $out;
  flush();
  exit();
  

}