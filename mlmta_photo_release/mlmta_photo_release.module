<?php

/**
 * @file
 *  Produces a PDF with a photo release table for parent signature
 */

/**
 * Implements hook_menu()
 */
function mlmta_photo_release_menu() {
  $items['pdf-photo-release'] = array(
    'title' => 'Photo release form',
    'description' => 'Produces a PDF for release signatures',
    'page callback' => 'mlmta_photo_release_entry',
    'access arguments' => array('edit any pursuit entities'),
  );
  return $items;
}

/**
 * Entry point for release form
 */
function mlmta_photo_release_entry() {
  
  // Please note: the db_query has some added statements not in the db_select below: MIN and GROUPBY
  $result = db_query("           
    SELECT pursuit.title AS title, pursuit.pursuit_id AS pursuit_id, MIN(pursuit_student.pursuit_student_reference_target_id) AS pursuit_student_reference_target_id, student.name AS name, student.student_id AS student_id, student_last_name.student_last_name_value AS student_last_name_value, student_first_name.student_first_name_value AS student_first_name_value, pursuit_teacher.pursuit_teacher_reference_target_id AS pursuit_teacher_reference_target_id, teacher.name AS teacher_name
    FROM 
    {pursuit} pursuit
    INNER JOIN {field_data_pursuit_order_paid} pursuit_order_paid ON pursuit_order_paid.entity_id = pursuit_id AND pursuit_order_paid.pursuit_order_paid_value = 1
    INNER JOIN {field_data_field_event_reference} pursuit_event ON pursuit_event.entity_id = pursuit.pursuit_id AND pursuit_event.field_event_reference_target_id = :event_id AND pursuit_event.entity_type = :type
    INNER JOIN {field_data_pursuit_student_reference} pursuit_student ON pursuit_student.entity_id = pursuit.pursuit_id AND pursuit_student.entity_type = :type
    INNER JOIN {student} student ON student.student_id = pursuit_student.pursuit_student_reference_target_id
    INNER JOIN {field_data_student_last_name} student_last_name ON student_last_name.entity_id = student.student_id AND student_last_name.entity_type = :studenttype
    INNER JOIN {field_data_student_first_name} student_first_name ON student_first_name.entity_id = student.student_id AND student_first_name.entity_type = :studenttype
    INNER JOIN {field_data_pursuit_teacher_reference} pursuit_teacher ON pursuit_teacher.entity_id = pursuit.pursuit_id AND pursuit_student.entity_type = :type
    INNER JOIN {teacher} teacher ON teacher.teacher_id = pursuit_teacher.pursuit_teacher_reference_target_id
    GROUP BY pursuit_student.pursuit_student_reference_target_id
    ORDER BY student_last_name.student_last_name_value ASC

  ", array(
      ':event_id' => event_switch_get_active_event(),
      ':type' => 'pursuit',
      ':studenttype' => 'student',
   )
  );
  
  $results = $result->fetchAll();
  
  //   $q = db_select('pursuit');
  //  $q->fields('pursuit', array('title', 'pursuit_id'));
  //
  //  $q->join('field_data_pursuit_order_paid', 'pursuit_order_paid', 'pursuit_order_paid.entity_id = pursuit_id AND pursuit_order_paid.pursuit_order_paid_value = 1');
  //
  //  $q->join('field_data_field_event_reference', 'pursuit_event', 'pursuit_event.entity_id = pursuit.pursuit_id AND pursuit_event.field_event_reference_target_id = :event_id AND pursuit_event.entity_type = :type', array(':event_id' => event_switch_get_active_event(), ':type' => 'pursuit'));
  //
  //  $q->join('field_data_pursuit_student_reference', 'pursuit_student', 'pursuit_student.entity_id = pursuit.pursuit_id AND pursuit_student.entity_type = :type', array(':type' => 'pursuit'));
  //  $q->fields('pursuit_student', array('pursuit_student_reference_target_id'));
  //
  //  $q->join('student', 'student', 'student.student_id = pursuit_student.pursuit_student_reference_target_id');
  //  $q->fields('student', array('name', 'student_id'));
  //  
  //  $q->join('field_data_student_last_name','student_last_name', 'student_last_name.entity_id = student.student_id AND student_last_name.entity_type = :studenttype', array(':studenttype'=> 'student'));
  //  $q->fields('student_last_name', array('student_last_name_value'));
  //
  //  $q->join('field_data_student_first_name','student_first_name', 'student_first_name.entity_id = student.student_id AND student_first_name.entity_type = :studenttype', array(':studenttype'=> 'student'));
  //  $q->fields('student_first_name', array('student_first_name_value'));
  //  
  //  $q->join('field_data_pursuit_teacher_reference', 'pursuit_teacher', 'pursuit_teacher.entity_id = pursuit.pursuit_id AND pursuit_student.entity_type = :type', array(':type' => 'pursuit'));
  //  $q->fields('pursuit_teacher', array('pursuit_teacher_reference_target_id'));
  //  
  //  $q->join('teacher', 'teacher', 'teacher.teacher_id = pursuit_teacher.pursuit_teacher_reference_target_id');
  //  $q->fields('teacher', array('name'));
  //
  //$q->orderBy('student_last_name.student_last_name_value');
  
  $event = event_load(event_switch_get_active_event());
  $event_wrapper = entity_metadata_wrapper('event', $event);
  $date_unix = $event_wrapper->field_event_date->value();
  $date = format_date($date_unix, 'custom', 'M d, Y');
  $location = nl2br($event_wrapper->field_event_location->value());
  $intro_text = "
<h2>PHOTO AND VIDEO AUTHORIZATION AND RELEASE FORM</h2>
<table width=\"100%\" border=\"1\" cellpadding=\"4\">
<tr><td width=\"50%\">Local Association: MLMTA</td><td>Event Name: {$event->title}</td></tr>
<tr><td width=\"50%\">Event Date: $date</td><td width=\"50%\">Event Location: $location</td></tr> 
</table>
<p>The MLMTA will be taking and using photographs and/or videotapes at this event to promote MLMTA activities and to serve its mission to advance musical knowledge and education by sponsoring events for students.  By signing below, the Parent, Guardian, or Student of age 18 or older:</p>
<ul><li>Authorizes MLMTA to take and use photographs and/or videotape of their child/children at this event on the MLMTA website and MLMTA Facebook page.</li>
<li>Authorizes MLMTA to print their child/children's first name and last initial only on the on the MLMTA website and MLMTA Facebook page.</li>
<li>Authorizes that their child/children may be included in a group photo from this event which may be used on the MLMTA website and MLMTA Facebook page.</li></ul>
<p>IF YOU DO NOT SIGN FOR THIS AUTHORIZATION, PLEASE BE SURE THAT YOUR CHILD IS NOT IN THE GROUP PHOTO.</p>  
";

  $header = array('Last name', "First name", 'Teacher', 'Authorized signature of permission');
  $rows = array();
  dpm($results);
  foreach($results as $db_row) {
    $cell = array();
    $cell['last_name'] = $db_row->student_last_name_value;
    $cell['first_name'] = $db_row->student_first_name_value;
    $cell['teacher_name'] = $db_row->teacher_name;
    $cell[] = '';
    $rows[] = array('data' => $cell, 'no_striping' => TRUE,);
  }

  $table = theme('table', array(
    'header' => $header,
    'rows' => $rows,
    'sticky'=>FALSE,
    'attributes' => array('border' => 1, 'cellpadding' => 4),
  )
  );
  
  $output = $intro_text . '<p>&nbsp;</p>' . $table;
  //dpm($output);
  //return $output;
  $pdf = new NORMALPDF('P','mm', 'LETTER');
  $pdf->SetAutoPageBreak(true, 25);
  $pdf->setFontSubsetting(false);
  // set header and footer fonts
  $pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
  $pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));
  
  // set default monospaced font
  $pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);
  
  // set margins
  $pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
  $pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
  $pdf->SetFooterMargin(PDF_MARGIN_FOOTER);
  $pdf->AddPage();
  $pdf->writeHTML($output);
  header('Content-Type: application/pdf');
  header('Content-Disposition: attachment;filename="MLMTA-photo-release-form.pdf"');
  $out = $pdf->Output();
  echo $out;
  flush();
  exit();
}